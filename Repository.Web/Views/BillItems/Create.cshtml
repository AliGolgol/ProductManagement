@model Repository.DomainModel.Catalog.BillItem

@{
    ViewBag.Title = "Create";
}

<div class="panel panel-success">
    <div class="panel-heading">
        ثبت خروج کالا
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.BillId)

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductId, "نام کالا", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" name="btnContinue" value="ذخیره و ادامه" class="btn btn-default btn-block" />
                        <input type="submit" name="btnSave" value="ذخیره" class="btn btn-default btn-block" />
                        <input type="submit" name="cancel" value="انصراف" class="btn btn-default btn-block" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="panel-footer panel-success"></div>
</div>
@*@if (TempData["success"] == "true")
{
    @:toastr.success('@TempData["message"]');
}
else if (TempData["success"] == "false")
{
    @:toastr.error('@TempData["message"]');
}*@

@section scripts {
    @if (TempData["message"] != null && TempData["success"] == "true")
    {

        <script type="text/javascript">
            $(document).ready(function() {
                toastr.success('@TempData["message"]');


            })
        </script>
    }
    else if(TempData["message"] != null && TempData["success"] == "false")
    {
        <script type="text/javascript">
            $(document).ready(function() {
                toastr.error('@TempData["message"]');


            })
        </script>
    }
}