@model Repository.DomainModel.Order.InvoiceItem


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel panel-success">

        <div class="panel-heading">
            سازنده جدید
        </div>
        <div class="panel-body">
            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductId, "نام کالا", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProductId", null, "انتخاب کنید", htmlAttributes: new { @class = "form-control", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RepositoryId, "نام انبار", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("RepositoryId", null, "انتخاب کنید", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RepositoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        <label id="note"></label>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
        <div class="panel-footer panel-success">
            <input type="submit" name="btnContinue" value="ثبت" class="btn btn-default" />
        </div>
    </div>
}
<script type="text/javascript">

        $(function () {
            $('#ProductId').change(function () {
                var p = $(this).val();
                $.ajax({
                   type:'GET',
                    url: '@Url.Action("SelectPrice")',
                    data: {'id':$(this).val()},
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",

                    success: function (data) {
                        //alert(data);
                        $('#Price').val(data);
                    },
                    error: function (data) {
                        alert('error :'+data);
                    }
                },Option);

            });

            $('#Quantity').change(function () {

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("SelectQuantity")',
                    data: { 'id': $(this).val() },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",

                    success: function (data) {
                        //alert(data);
                        var abx = document.getElementById('note');
                        abx.innerText = data;
                        //$('#note').text=data;
                    },
                    error: function (data) {
                        alert('error :' + data);
                    }
                }, Option);

            });
        });
</script>
