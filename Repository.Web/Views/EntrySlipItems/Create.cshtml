@model Repository.DomainModel.Entry.EntrySlipItem

@{
    ViewBag.Title = "Create";
}

<div class="panel panel-success">
    <div class="panel-heading">
        ایجاد 
    </div>
    <div class="panel-body">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EntrySlipId, "EntrySlipId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EntrySlipId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EntrySlipId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RpsId, "RpsId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RpsId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RpsId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="btnContinue" value="ذخیره و ادامه" class="btn btn-default btn-block" />|
                <input type="submit" name="btnSave" value="ذخیره" class="btn btn-default btn-block" />|
                <input type="submit" name="cancel" value="انصراف" class="btn btn-default btn-block" />
            </div>
        </div>
    </div>
}

    </div>
    <div class="panel-footer panel-success">
        <div>
            @Html.ActionLink("بازگشت", "Index", null, new { @class = "btn btn-success btn-block" })
        </div>
    </div>
</div>